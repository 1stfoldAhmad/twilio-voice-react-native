{"version":3,"file":"CallMessage.js","sourceRoot":"","sources":["../../src/CallMessage/CallMessage.ts"],"names":[],"mappings":"AAAA;;;;;GAKG;AAEH,OAAO,EAAE,oBAAoB,EAAE,MAAM,+BAA+B,CAAC;AAsCrE;;;;;;;;GAQG;AACH,MAAM,UAAU,mBAAmB,CAAC,OAAoB;IACtD,MAAM,OAAO,GAAG,OAAO,CAAC,OAAO,CAAC;IAChC,MAAM,WAAW,GAAG,OAAO,CAAC,WAAW,CAAC;IAExC,IAAI,WAAW,GAAG,OAAO,CAAC,WAAW,CAAC;IAEtC,IAAI,OAAO,WAAW,KAAK,WAAW,EAAE,CAAC;QACvC,WAAW,GAAG,kBAAkB,CAAC;IACnC,CAAC;IAED,IAAI,OAAO,WAAW,KAAK,QAAQ,EAAE,CAAC;QACpC,MAAM,IAAI,oBAAoB,CAC5B,2DAA2D,CAC5D,CAAC;IACJ,CAAC;IAED,IAAI,OAAO,WAAW,KAAK,QAAQ,EAAE,CAAC;QACpC,MAAM,IAAI,oBAAoB,CAAC,yCAAyC,CAAC,CAAC;IAC5E,CAAC;IAED,IAAI,OAAO,OAAO,KAAK,WAAW,IAAI,OAAO,KAAK,IAAI,EAAE,CAAC;QACvD,MAAM,IAAI,oBAAoB,CAAC,2CAA2C,CAAC,CAAC;IAC9E,CAAC;IAED,MAAM,UAAU,GACd,OAAO,OAAO,KAAK,QAAQ,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC;IAElE,OAAO,EAAE,OAAO,EAAE,UAAU,EAAE,WAAW,EAAE,WAAW,EAAE,CAAC;AAC3D,CAAC","sourcesContent":["/**\n * Copyright Â© 2022 Twilio, Inc. All rights reserved. Licensed under the Twilio\n * license.\n *\n * See LICENSE in the project root for license information.\n */\n\nimport { InvalidArgumentError } from '../error/InvalidArgumentError';\n\n/**\n * The constituent values of a Call Message.\n *\n * @public\n */\nexport interface CallMessage {\n  /**\n   * The content of the message. This value should match the content type\n   * parameter.\n   *\n   * See {@link CallMessage.contentType} for more information.\n   */\n  content: any;\n\n  /**\n   * The content type of the message. This value should accurately describe\n   * the content of the message. The following values are accepted:\n   *\n   * - \"application/json\"\n   *\n   * If no value is defined, then the default value of \"application/json\" will\n   * be used.\n   *\n   * If the `contentType` of the message is \"application/json\", the content\n   * of the message may be a JS object.\n   */\n  contentType?: string;\n\n  /**\n   * The message type. The following values are accepted:\n   *\n   * - \"user-defined-message\"\n   */\n  messageType: string;\n}\n\n/**\n * Parse CallMessage values. Used when constructing a CallMessage from the\n * native layer, or by the Call and CallInvite classes when sending a\n * CallMessage.\n *\n * @param message the CallMessage details.\n *\n * @internal\n */\nexport function validateCallMessage(message: CallMessage) {\n  const content = message.content;\n  const messageType = message.messageType;\n\n  let contentType = message.contentType;\n\n  if (typeof contentType === 'undefined') {\n    contentType = 'application/json';\n  }\n\n  if (typeof contentType !== 'string') {\n    throw new InvalidArgumentError(\n      'If \"contentType\" is present, it must be of type \"string\".'\n    );\n  }\n\n  if (typeof messageType !== 'string') {\n    throw new InvalidArgumentError('\"messageType\" must be of type \"string\".');\n  }\n\n  if (typeof content === 'undefined' || content === null) {\n    throw new InvalidArgumentError('\"content\" must be defined and not \"null\".');\n  }\n\n  const contentStr =\n    typeof content === 'string' ? content : JSON.stringify(content);\n\n  return { content: contentStr, contentType, messageType };\n}\n"]}